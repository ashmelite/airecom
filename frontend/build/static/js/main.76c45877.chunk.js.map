{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_CLEAR_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_CLEAR","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_CLEAR","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_RESET","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","itm","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","getOrderDetails","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","classname","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","defaultChecked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","_email","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","checked","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","console","updateProduct","File","custom","App","path","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.76c45877.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_CLEAR_SHIPPING_ADDRESS = 'CART_CLEAR_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\nexport const USER_REGISTER_CLEAR = 'USER_REGISTER_CLEAR'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_CLEAR = 'USER_DETAILS_CLEAR'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'          //reset user update state; this is same as clear state (as I've added above)\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n//for admin route\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n//list my (logged in user's) orders\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productCreateReviewReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,             //productList (whatever name we use for this) will be shown as state in dev tools\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productCreateReview: productCreateReviewReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n  userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {       //reducer takes in initial state (we can set it to an empty obj) and an action\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }                      //when we make a request, we want component to know that it's currently being fetched/loading \r\n    case PRODUCT_LIST_SUCCESS:                //case for when we get a successful response back\r\n      return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page }         //see article 5.3 @ 04:00 for action.payload\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state                                      //return initial state (as passed in the argument)\r\n  }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const productCreateReviewReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}","import { CART_ADD_ITEM, CART_CLEAR_SHIPPING_ADDRESS, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n  switch(action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n      \r\n      //check if the product is already in cart; find will return the first item where condition satisfies\r\n      const existItem = state.cartItems.find(x => x.product === item.product)         //here, product will be an id\r\n      \r\n      if(existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)                 //map will return everthing that is already in the array, and based on the condition it will either return the 'item' (which we're trying to add in cart) or other items which are already there in the cart\r\n        }\r\n      } else {                      //if item is not already in card, add it to cart\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item]\r\n        }\r\n      }\r\n      \r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)          //return every item whose id does not match with payload id, and filter out the item whose id matches\r\n      }\r\n      \r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload             //action.payload is data which we send through form\r\n      }\r\n      \r\n    case CART_CLEAR_SHIPPING_ADDRESS:               //have added this part\r\n      return {\r\n        ...state,\r\n        shippingAddress: {}\r\n      }\r\n    \r\n    case CART_SAVE_PAYMENT_METHOD:\r\n    return {\r\n      ...state,\r\n      paymentMethod: action.payload\r\n    }\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}","import { \r\n  USER_LOGIN_FAIL, \r\n  USER_LOGIN_REQUEST, \r\n  USER_LOGIN_SUCCESS, \r\n  USER_LOGOUT, USER_REGISTER_FAIL, \r\n  USER_REGISTER_REQUEST, \r\n  USER_REGISTER_SUCCESS, \r\n  USER_REGISTER_CLEAR, \r\n  USER_DETAILS_REQUEST, \r\n  USER_DETAILS_SUCCESS, \r\n  USER_DETAILS_FAIL, \r\n  USER_DETAILS_CLEAR,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_REGISTER_CLEAR:                             // have added this to clear userRegister State, since userInfo kept saving in local storage even after logging out; call this on logout\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: { } }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }              // ...state -> return whatever there is already in the state\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_CLEAR:                             // have added this to clear userDetails State (just clearing user object inside not the whole userDetails state), call this on logout\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//for admin route\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//for admin route\r\nexport const userDeleteReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//for admin route\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} }               // return state object with empty user (obj)\r\n    default:\r\n      return state\r\n  }\r\n}","import { \r\n  ORDER_CREATE_REQUEST, \r\n  ORDER_CREATE_SUCCESS, \r\n  ORDER_CREATE_FAIL, \r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_RESET,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ORDER_CREATE_RESET:\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = ( state = { loading: true, order: {} }, action) => {\r\n  switch(action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ORDER_DETAILS_RESET:\r\n      return { loading: true, order: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const orderPayReducer = ( state = {}, action) => {\r\n  switch(action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = ( state = {}, action) => {\r\n  switch(action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return { }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = ( state = { orders: [] }, action) => {\r\n  switch(action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport const orderListReducer = ( state = { orders: [] }, action) => {\r\n  switch(action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  \r\n  const [keyword, setKeyword] = useState('')      //keyword -> represents keyword passed into search form\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (keyword.trim()) {                         //trim() = trim white spaces\r\n      history.push(`/search/${keyword}`)\r\n    } else {                                      //if there is no keyword (but user clicks search) then redirect to homepage\r\n      history.push('/')\r\n    }\r\n    \r\n  }\r\n  \r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} placeholder='Search Products...' className='mr-sm-2 ml-sm-5' />     {/* mr-sm = margin right, small screens;  ml-sm = margin left, small screens */}\r\n      <Button type='submit' variant='outline-success' className='p-2'>Search</Button>                  {/* outline-success = green outline; p-2 = padding of 2 */}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { CART_CLEAR_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\nimport { ORDER_CREATE_RESET, ORDER_DETAILS_RESET, ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport { \r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DETAILS_CLEAR,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_LIST_SUCCESS,\r\n  USER_LOGIN_FAIL, \r\n  USER_LOGIN_REQUEST, \r\n  USER_LOGIN_SUCCESS, \r\n  USER_LOGOUT, \r\n  USER_REGISTER_CLEAR, \r\n  USER_REGISTER_FAIL, \r\n  USER_REGISTER_REQUEST, \r\n  USER_REGISTER_SUCCESS, \r\n  USER_UPDATE_FAIL, \r\n  USER_UPDATE_PROFILE_FAIL, \r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS} from \"../constants/userConstants\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST\r\n    })\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n    \r\n    //if we get OK status back from axios post request, only then the action (below) will get dispatched else catch block will execute\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n    //save userdata into local storage once login is successful\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('shippingAddress')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_REGISTER_CLEAR })\r\n  dispatch({ type: USER_DETAILS_CLEAR })\r\n  dispatch({ type: CART_CLEAR_SHIPPING_ADDRESS })\r\n  dispatch({ type: ORDER_CREATE_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: ORDER_DETAILS_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST\r\n    })\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n    \r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n    //dispatch login success action as well if registration is successful\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n    localStorage.setItem('userLogin', JSON.stringify(data))\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n//we can use this same method to check if a user is logged in or not before allowing access to a route. In ProfileScreen we pass 'profile' as a parameter (to id) while calling this method which will make the axios get request (below) point to api/users/profile instead of api/users/:userid\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {             // getState -> since we need to send token from frontend (by using headers, see below) to backend, we can get token from userInfo (state) by using getState; see * comment below\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST\r\n    })\r\n    \r\n    // *getState\r\n    // we're destructuring below to get userInfo from userLogin; this will give us logged in user's object which is userInfo\r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n    \r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n                  //pass in the entire user object\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.put('/api/users/profile', user, config)\r\n    \r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n    \r\n    // **NAVBAR USER NAME UPDATE FIX**\r\n    // update the user's name in the navbar when a user updates Profile\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n    dispatch({                          //pass updated user data (from payload) into userDetails state\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n    // **NAVBAR USER NAME UPDATE FIX**\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.get('/api/users', config)\r\n    \r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    await axios.delete(`/api/users/${id}`, config)\r\n    \r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n    \r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS\r\n    })\r\n    \r\n    dispatch({                          //pass updated user data (from payload) into userDetails state\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {            //Arrow function\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n  \r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>AirEcom</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            \r\n            {/* <SearchBox />  if we directly put this SearchBox component here i.e inside the Header component, it won't have access to router props like history, match since header doesn't have access either. So, we use Route component and put SearchBox inside that. For more info, article 13.3 @ 11:00 */}\r\n            \r\n            <Route render={({ history }) => <SearchBox history={history} /> } />\r\n            \r\n            <Nav className=\"ml-auto\">\r\n            <LinkContainer to='/cart'>\r\n              <Nav.Link><i className=\"fas fa-shopping-cart\" /> Cart</Nav.Link>\r\n            </LinkContainer>\r\n            {\r\n              userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  \r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                  \r\n                </NavDropdown>\r\n              ) :\r\n              \r\n            <LinkContainer to='/login'>\r\n              <Nav.Link><i className=\"fas fa-user\" /> Sign In</Nav.Link>\r\n            </LinkContainer>\r\n              \r\n            }\r\n            \r\n            {\r\n              userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  \r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  \r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  \r\n                </NavDropdown>\r\n              )\r\n            }\r\n            \r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>\r\n            Copyright &copy; AirEcom\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i style={{ color: color }} className={value >=1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n      </span>\r\n      <span>\r\n        <i style={{ color: color }} className={value >=2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n      </span>\r\n      <span>\r\n        <i style={{ color: color }} className={value >=3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n      </span>\r\n      <span>\r\n        <i style={{ color: color }} className={value >=4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n      </span>\r\n      <span>\r\n        <i style={{ color: color }} className={value >=5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'} />\r\n      </span>\r\n      <span>\r\n        {text && text}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825'\r\n}\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n      \r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        \r\n        <Card.Text as='div'>\r\n          <Rating value={product.rating} text={`${product.numReviews} Reviews`}/>\r\n        </Card.Text>\r\n        \r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner animation='border' role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\r\n      <span className='sr-only'>\r\n        Loading...\r\n      </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {          //children = message\r\n  return (\r\n    <Alert variant={variant}>\r\n      {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {                //isAdmin is false by default, keyword is '' (empty) by default\r\n  return (\r\n    pages > 1 &&                      //show links (to navigate pages) only if total no. of pages is greater than 1\r\n    (\r\n      <Pagination>                        {/* for more info, article 13.4 @ 12:30 */}\r\n        {[...Array(pages).keys()].map(x => (\r\n          <LinkContainer key={x + 1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}`} >\r\n            <Pagination.Item active={x + 1 === page}>\r\n              {x + 1}\r\n            </Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\n//Note: in map() above, say pages=3 then array will have 0, 1, 2. So, we've written x + 1 which will be the current page while mapping for each element (x)\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { \r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n \r\n\r\n//before implementing search keyword & pagination, () was empty\r\nexport const listProducts = (keyword = '', pageNumber= '') => async (dispatch) => {          //redux thunk allows us to use function within a function so that we can make async request\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })         //dispatch the action; PRODUCT_LIST_REQUEST is an action\r\n    \r\n    //after dispatching request action (above), make a request to backend for getting data back\r\n    const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)          // { data } is just destructure of the actual response we're getting back from the server\r\n    //const { data } = await axios.get('/api/products')     before implementing search keyword the get req looked like this\r\n    \r\n    \r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n    \r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    \r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    await axios.delete(`/api/products/${id}`, config)\r\n    \r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.post('/api/products', {}, config)      // pass in empty object as argument since we are posting but not sending any data\r\n    \r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n    \r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n//                                            review object will have rating & comment\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n    \r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n    \r\n    const { data } = await axios.get('/api/products/top')\r\n    \r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n  \r\n  const productTopRated = useSelector(state => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n  \r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n  \r\n  return (\r\n    loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n    (\r\n      <Carousel pause='hover' className='bg-dark'>\r\n        {products.map(product => (\r\n          <Carousel.Item key={product._id}>\r\n            <Link to={`/product/${product._id}`}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n              <Carousel.Caption className='carousel-caption'>\r\n                <h2>{product.name} (${product.price})</h2>\r\n              </Carousel.Caption>\r\n            </Link>\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","//this is a wrapper component for React Helmet so that we can pass title, desc, keywords for each Screen/Page dynamically\r\n\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome to Proshop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'Electronics, Buy Electronics, Cheap Electronics'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  \r\n  //search box keyword\r\n  const keyword = match.params.keyword\r\n  \r\n  //pagination page number\r\n  const pageNumber = match.params.pageNumber || 1\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  //                                       select productList from state\r\n  const productList = useSelector(state => state.productList)\r\n  const { loading, error, products, pages, page } = productList      //pull loading, error (if any) & products from state\r\n  \r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <Meta />\r\n      \r\n      {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n      <h1>Latest Products</h1>\r\n      {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :             //error obj comes from backend\r\n      \r\n      <>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        \r\n        <Paginate pages={pages} page={page} keyword={ keyword ? keyword : '' } />\r\n      </>\r\n      \r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  \r\n  const [qty, setQty] = useState(1)           //we're keeping product quantity as component level state rather than global (redux), so we use useState hook.\r\n  \r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n  \r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  const productCreateReview = useSelector(state => state.productCreateReview)\r\n  const { success: successProductReview, error: errorProductReview } = productCreateReview\r\n  \r\n  useEffect(() => {\r\n    \r\n    if (successProductReview) {\r\n      alert('Review Submitted!')\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n    \r\n    dispatch(listProductDetails(match.params.id))\r\n    \r\n  }, [dispatch, match, successProductReview])\r\n  \r\n  \r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, { rating, comment }))\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {(match.params.id !== product._id) || loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :                //originally it was just checking if loading is true, then show loader. But, this led to the behavior of last seen product details flashing for a second. So, added match params check. \r\n      \r\n      <>             {/*we've added empty tag here since : (else part) lets us return only one row. Since, we are returning two rows here, we use <> */}\r\n        <Meta title={product.name}/>     {/* Added Meta/React-Helmet here instead in the outer <> (empty) tag since we want the product to render first*/}\r\n        \r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid/>\r\n          </Col>\r\n          \r\n          <Col md={3}>\r\n            <ListGroup variant='flush'>\r\n              \r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                Price: ${product.price}\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                Description: {product.description}\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Col>\r\n          \r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    \r\n                    <Col>\r\n                      Price:\r\n                    </Col>\r\n                    \r\n                    <Col>\r\n                      <strong>${product.price}</strong>\r\n                    </Col>\r\n                    \r\n                  </Row>\r\n                </ListGroup.Item>\r\n                \r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    \r\n                    <Col>\r\n                      Status:\r\n                    </Col>\r\n                    \r\n                    <Col>\r\n                      {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                    </Col>\r\n                    \r\n                  </Row>\r\n                </ListGroup.Item>\r\n                \r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>                             {/*for more info on this Form.Control component, see article 6.1 @ 1:54 */}\r\n                          {\r\n                            [...Array(product.countInStock).keys()].map(x => (\r\n                              <option key={x + 1} value={x + 1}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                          }\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                \r\n                <ListGroup.Item>\r\n                  <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock === 0}>\r\n                    Add to Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n                \r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Row>\r\n          <Col md={6}>\r\n            <h2>Reviews</h2>\r\n            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n            <ListGroup variant='flush'>\r\n              {product.reviews.map(review => (\r\n                <ListGroup.Item key={review._id}>\r\n                  <strong>{review.name}</strong>\r\n                  <Rating value={review.rating} />\r\n                  <p>{review.createdAt.substring(0, 10)}</p>\r\n                  <p>{review.comment}</p>\r\n                </ListGroup.Item>\r\n              ))}\r\n              \r\n              <ListGroup.Item>\r\n                <h2>Write a Review...</h2>\r\n                {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                {\r\n                  userInfo ? \r\n                  \r\n                  (\r\n                    <Form onSubmit={submitHandler}>\r\n                      \r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      \r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)} />\r\n                      </Form.Group>\r\n                      \r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                      \r\n                    </Form>\r\n                  ) : \r\n                  \r\n                  <Message>\r\n                    Please <Link to='/login'>Sign in</Link> to write a Review\r\n                  </Message>\r\n                }\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n      \r\n      } \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n  \r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty\r\n    }\r\n  })\r\n  \r\n  //save entire cart in local storage\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))          //JSON stringify to convert JavaScript obj to string. When reading back from storage use JSON.parse\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id\r\n  })\r\n  \r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data\r\n  })\r\n  \r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data\r\n  })\r\n  \r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  \r\n  const productId = match.params.id\r\n  \r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1           //see article 6.3 @ 09:30 for more info on location\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  //to display the items in CartScreen (UI), select cart state object -> cartItems and store it in a variable\r\n  const cart = useSelector(state => state.cart)\r\n  const { cartItems } = cart\r\n  \r\n  useEffect(() => {\r\n    if(productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n  \r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n  \r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')          //if user is not logged in, redirect to login page, else go to shipping page\r\n  }\r\n  \r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {\r\n          cartItems.length === 0 ? \r\n          <Message>\r\n            Your cart is empty! <Link to='/'>Go Back</Link>\r\n          </Message> :\r\n          \r\n          (\r\n            <ListGroup variant='flush'>\r\n              {cartItems.map(item => (\r\n                <ListGroup.Item key={item.product}>           {/* item.product is the id */}\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Image src={item.image} alt={item.name} fluid rounded />\r\n                    </Col>\r\n                    \r\n                    <Col md={3}>\r\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                    </Col>\r\n                    \r\n                    <Col md={2}>\r\n                      ${item.price}\r\n                    </Col>\r\n                    \r\n                    <Col md={2}>\r\n                      <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                        {\r\n                          [...Array(item.countInStock).keys()].map(x => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))\r\n                        }\r\n                      </Form.Control>\r\n                    </Col>\r\n                    \r\n                    <Col md={2}>\r\n                      <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                        <i className='fas fa-trash' />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )\r\n          \r\n        }\r\n      </Col>\r\n      \r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Subtotal ({cartItems.reduce((acc, itm) => acc + itm.qty, 0)}) items</h2>                {/*see article 6.4 @ 12:00 */}\r\n              \r\n              ${cartItems.reduce((acc, itm) => acc + itm.qty * itm.price, 0).toFixed(2)}\r\n            </ListGroup.Item>\r\n            \r\n            <ListGroup.Item>\r\n              <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                Proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  \r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n  \r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  \r\n  //using useEffect to check if user is already logged in, if so don't show the login screen\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])       //dependencies, i.e. if history or userInfo changes, run useEffect\r\n  \r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    dispatch(login(email, password))\r\n  }\r\n  \r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {\r\n        error && <Message variant='danger'>{error}</Message>\r\n      }\r\n      {\r\n        loading && <Loader />\r\n      }\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      \r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  \r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const userRegister = useSelector(state => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n  \r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n  \r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n    \r\n  }\r\n  \r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {\r\n        message && <Message variant='danger'>{message}</Message>\r\n      }\r\n      {\r\n        error && <Message variant='danger'>{error}</Message>\r\n      }\r\n      {\r\n        loading && <Loader />\r\n      }\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control type='password' placeholder='Enter Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      \r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log In</Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport { \r\n  ORDER_CREATE_REQUEST, \r\n  ORDER_CREATE_SUCCESS, \r\n  ORDER_CREATE_FAIL, \r\n  ORDER_DETAILS_REQUEST, \r\n  ORDER_DETAILS_SUCCESS, \r\n  ORDER_DETAILS_FAIL, \r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL} from '../constants/orderConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.post('/api/orders', order, config)\r\n    \r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    \r\n    dispatch({ type: ORDER_DETAILS_REQUEST })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        //we don't need Content-Type in header since this is a get request (see below)\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n    \r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\n//paymentResult is going to come back as response from Paypal api\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n    \r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n    \r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.get('/api/orders/myorders', config)\r\n    \r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST\r\n    })\r\n    \r\n    const { userLogin: { userInfo } } = getState()\r\n    \r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    \r\n    const { data } = await axios.get('/api/orders', config)\r\n    \r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    })\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  \r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n  \r\n  // pull success from state, since we want to show a message if profile gets updated\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n  \r\n  //checking to see if user is actually logged in, so we bring in userInfo from state\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  const orderListMy = useSelector(state => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n  \r\n  useEffect(() => {\r\n    \r\n    dispatch({ type: ORDER_DETAILS_RESET })               //have added this to reset previous order's details from orderDetails state\r\n    \r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n        if (!user || !user.name) {\r\n          dispatch(getUserDetails('profile'))\r\n          dispatch(listMyOrders())\r\n        } else {\r\n          setName(user.name)\r\n          setEmail(user.email)\r\n        }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n  \r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))        // here note: we passed name not user.name since on form change, setName will be called which will store (updated name) into name\r\n    }\r\n    \r\n  }\r\n  \r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {\r\n          message && <Message variant='danger'>{message}</Message>\r\n        }\r\n        {\r\n          error && <Message variant='danger'>{error}</Message>\r\n        }\r\n        {\r\n          success && <Message variant='success'>Profile Updated Successfully!</Message>\r\n        }\r\n        {\r\n          loading && <Loader />\r\n        }\r\n        <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)} />\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          </Form.Group>\r\n          \r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type='password' placeholder='Enter Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n          </Form.Group>\r\n          \r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      \r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            \r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {\r\n                      order.isPaid ? order.paidAt.substring(0, 10) : \r\n                      (\r\n                        <i className='fas fa-times' style={{ color: 'red' }} />\r\n                      )\r\n                    }\r\n                  </td>\r\n                  <td>\r\n                    {\r\n                      order.isDelivered ? order.deliveredAt.substring(0, 10) : \r\n                      (\r\n                        <i className='fas fa-times' style={{ color: 'red' }} />\r\n                      )\r\n                    }\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button classname='btn-sm' variant='light'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n      <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n          {\r\n            step1 ? (\r\n              <LinkContainer to='/login'>\r\n                <Nav.Link>Sign In</Nav.Link>\r\n              </LinkContainer>\r\n            ) : (\r\n              <Nav.Link disabled>Sign In</Nav.Link>\r\n            ) \r\n          }\r\n        </Nav.Item>\r\n        \r\n        <Nav.Item>\r\n          {\r\n            step2 ? (\r\n              <LinkContainer to='/shipping'>\r\n                <Nav.Link>Shipping</Nav.Link>\r\n              </LinkContainer>\r\n            ) : (\r\n              <Nav.Link disabled>Shipping</Nav.Link>\r\n            ) \r\n          }\r\n        </Nav.Item>\r\n        \r\n        <Nav.Item>\r\n          {\r\n            step3 ? (\r\n              <LinkContainer to='/payment'>\r\n                <Nav.Link>Payment</Nav.Link>\r\n              </LinkContainer>\r\n            ) : (\r\n              <Nav.Link disabled>Payment</Nav.Link>\r\n            ) \r\n          }\r\n        </Nav.Item>\r\n        \r\n        <Nav.Item>\r\n          {\r\n            step4 ? (\r\n              <LinkContainer to='/placeorder'>\r\n                <Nav.Link>Place Order</Nav.Link>\r\n              </LinkContainer>\r\n            ) : (\r\n              <Nav.Link disabled>Place Order</Nav.Link>\r\n            ) \r\n          }\r\n        </Nav.Item>\r\n      </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  \r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n  \r\n  const [address, setAddress] = useState(shippingAddress.address)               //ShippingAddress, if it exists in state will be pulled out (see above, useSelector) and from that address will be filled in our initialState using useState \r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n  \r\n  \r\n  //*****\r\n  // Added functionality on top\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n  }, [history, userInfo])\r\n  // Above piece checks if a user logs out on shipping page, then push to login page\r\n  //*****\r\n  \r\n  \r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2/>              {/* pass in step1 & step2 as props; see article 9.2 @ 04:00 */}\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control type='text' placeholder='Enter Address' value={address} required onChange={(e) => setAddress(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control type='text' placeholder='Enter City' value={city} required onChange={(e) => setCity(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control type='text' placeholder='Enter Postal Code' value={postalCode} required onChange={(e) => setPostalCode(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control type='text' placeholder='Enter Country' value={country} required onChange={(e) => setCountry(e.target.value)} />\r\n        </Form.Group>\r\n        \r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  \r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n  \r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n  \r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n  \r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n    \r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3/>\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>\r\n            Select Method\r\n          </Form.Label>\r\n        \r\n          <Col>\r\n            <Form.Check type='radio' label='Paypal or Credit Card' id='PayPal' name='paymentMethod' value='PayPal' defaultChecked onChange={(e) => setPaymentMethod(e.target.value)} />\r\n            <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentMethod' value='Stripe' onChange={(e) => setPaymentMethod(e.target.value)} />\r\n          </Col>\r\n        </Form.Group>\r\n        \r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const cart = useSelector(state => state.cart)         //bring in items from cart\r\n  \r\n  // Calculate Prices\r\n  const addDecimals = (num) => {                        //this method adds 0 at ones decimals place for eg. 12.1 to 12.10\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n  \r\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10)\r\n  cart.taxPrice = addDecimals(Number((0.12 * cart.itemsPrice).toFixed(2)))             // 0.12 -> 12% tax\r\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n  \r\n  const orderCreate = useSelector(state => state.orderCreate)       //once placeOrderHandler gets called, the data will pass down to state which we pull here\r\n  const { order, success, error } = orderCreate\r\n  \r\n  useEffect(() => {\r\n    \r\n    dispatch({ type: ORDER_DETAILS_RESET })               //have added this to reset previous order's details from orderDetails state\r\n    \r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])      //we've not included order._id as dependency since it does not exist until we have actually submitted/placed order\r\n  \r\n  const placeOrderHandler = () => {\r\n    dispatch(createOrder({\r\n      orderItems: cart.cartItems,\r\n      shippingAddress: cart.shippingAddress,\r\n      paymentMethod: cart.paymentMethod,\r\n      itemsPrice: cart.itemsPrice,\r\n      shippingPrice: cart.shippingPrice,\r\n      taxPrice: cart.taxPrice,\r\n      totalPrice: cart.totalPrice\r\n    }))\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4/>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address},{' '}\r\n                {cart.shippingAddress.city},{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            \r\n            <ListGroup.Item>\r\n              <h2>Payment Option</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n            \r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {\r\n                cart.cartItems.length === 0 ? \r\n                <Message>\r\n                  Your Cart is Empty!\r\n                </Message> : \r\n                (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image src={item.image} alt={item.name} fluid rounded />\r\n                        </Col>\r\n                        \r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        \r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n                )  \r\n              }\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        \r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message> }\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  \r\n  const orderId = match.params.id\r\n  \r\n  const [sdkReady, setSdkReady] = useState(false)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  const orderDetails = useSelector(state => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n  \r\n  const orderPay = useSelector(state => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay           //since we already have 'loading' from orderDetails state, renaming loading to loadingPay and success to successPay \r\n  \r\n  const orderDeliver = useSelector(state => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n  \r\n  if (!loading) {           //this check here prevents this error -> TypeError: order is undefined\r\n    // Calculate Prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    \r\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n  }\r\n  \r\n  \r\n  useEffect(() => {\r\n    \r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (loading) {\r\n        dispatch(getOrderDetails(orderId))\r\n      }\r\n    }\r\n    \r\n    // dynamically adding paypal script into html\r\n    const addPaypalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')        //fetch client ID from backend environment variable\r\n      // console.log(clientId)\r\n      const script = document.createElement('script')                         //dynamically creating script\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)             //when script has been loaded set it to true\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    \r\n    if (!order || successPay || successDeliver) {                     // we've added !order since we want to see order details even if we haven't paid\r\n      dispatch({ type: ORDER_PAY_RESET })           // to prevent refreshing (loop) when you make payment\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))            // if payment is successful, load the order again to show changed payment status\r\n    } else if (!order.isPaid) {                     // if order is not paid\r\n      if (!window.paypal) {                         // checking if paypal script is not already there\r\n        addPaypalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n    \r\n  }, [dispatch, orderId, successPay, successDeliver, order, loading, history, userInfo])\r\n  \r\n  \r\n  const successPaymentHandler = (paymentResult) => {\r\n    // console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n  \r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n  \r\n  return (\r\n    loading ? <Loader /> : userInfo._id !== order.user._id && !userInfo.isAdmin ? <Message variant='danger'>You are not authorized to view that order!</Message> : error ? <Message variant='danger'>{error}</Message> : \r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      \r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name: </strong> {order.user.name}</p>\r\n              <p><strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address},{' '}\r\n                {order.shippingAddress.city},{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            \r\n            <ListGroup.Item>\r\n              <h2>Payment Option</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n            </ListGroup.Item>\r\n            \r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {\r\n                order.orderItems.length === 0 ? \r\n                <Message>\r\n                  Order is empty\r\n                </Message> : \r\n                (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image src={item.image} alt={item.name} fluid rounded />\r\n                        </Col>\r\n                        \r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        \r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n                )  \r\n              }\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        \r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              {\r\n                !order.isPaid && (\r\n                  <ListGroup.Item>\r\n                    {loadingPay && <Loader />}\r\n                    {!sdkReady ? <Loader /> : (\r\n                      <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                    )}\r\n                  </ListGroup.Item>\r\n                )\r\n              }\r\n              \r\n              {loadingDeliver && <Loader />}\r\n              {\r\n                userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                      Mark as Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )\r\n              }\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const orderList = useSelector(state => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n  \r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  useEffect(() => {\r\n    \r\n    dispatch({ type: ORDER_DETAILS_RESET })               //have added this to reset previous order's details from orderDetails state\r\n    \r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n    \r\n  }, [dispatch, userInfo, history])\r\n  \r\n  \r\n  return (\r\n    <>\r\n     <h1>Orders</h1>\r\n     { loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n       <Table striped bordered hover responsive className='table-sm'>\r\n         <thead>\r\n           <tr>\r\n             <th>ID</th>\r\n             <th>USER</th>\r\n             <th>DATE</th>\r\n             <th>TOTAL</th>\r\n             <th>PAID</th>\r\n             <th>DELIVERED</th>\r\n             <th></th>\r\n           </tr>\r\n         </thead>\r\n         \r\n         <tbody>\r\n           {\r\n             orders.map(order => (\r\n               <tr key={order._id}>\r\n                 <td>{order._id}</td>\r\n                 <td>{order.user && order.user.name}</td>                      {/* if order.user exists then show order.user.name */}\r\n                 <td>{order.createdAt.substring(0, 10)}</td>\r\n                 <td>${order.totalPrice}</td>\r\n                 <td>\r\n                   {\r\n                     order.isPaid ? \r\n                     (order.paidAt.substring(0, 10)) : \r\n                     (<i className='fas fa-times' style={{ color: 'red' }} />)\r\n                   }\r\n                 </td>\r\n                 \r\n                 <td>\r\n                   {\r\n                     order.isDelivered ? \r\n                     (order.deliveredAt.substring(0, 10)) : \r\n                     (<i className='fas fa-times' style={{ color: 'red' }} />)\r\n                   }\r\n                 </td>\r\n                 \r\n                 <td>\r\n                   <LinkContainer to={`/order/${order._id}`}>\r\n                     <Button variant='light' className='btn-sm'>\r\n                       Details\r\n                     </Button>\r\n                   </LinkContainer>\r\n                   \r\n                 </td>\r\n               </tr>\r\n             ))\r\n           }\r\n         </tbody>\r\n       </Table>\r\n     ) } \r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const userList = useSelector(state => state.userList)\r\n  const { loading, error, users } = userList\r\n  \r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  const userDelete = useSelector(state => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n  \r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n    \r\n  }, [dispatch, userInfo, history, successDelete])            //we've not used successDelete inside useEffect but if a user gets deleted we want to re-render the page so we've added it to dependency array\r\n  \r\n  const deleteHandler = (id) => {\r\n    //console.log('delete')\r\n    if(window.confirm('Are you sure?')) {\r\n      dispatch(deleteUser(id))            // pass in the id to deleteUser() which got passed down from deleteHandler\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n     <h1>Users</h1>\r\n     { loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n       <Table striped bordered hover responsive className='table-sm'>\r\n         <thead>\r\n           <tr>\r\n             <th>ID</th>\r\n             <th>NAME</th>\r\n             <th>EMAIL</th>\r\n             <th>ADMIN</th>\r\n             <th></th>\r\n           </tr>\r\n         </thead>\r\n         \r\n         <tbody>\r\n           {\r\n             users.map(user => (\r\n               <tr key={user._id}>\r\n                 <td>{user._id}</td>\r\n                 <td>{user.name}</td>\r\n                 <td><a href={`mailto:${user.email}`}>{user._email}</a></td>\r\n                 <td>\r\n                   {\r\n                     user.isAdmin ? \r\n                     (<i className='fas fa-check' style={{ color: 'green' }} />) : \r\n                     (<i className='fas fa-times' style={{ color: 'red' }} />)\r\n                   }\r\n                 </td>\r\n                 <td>\r\n                   <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                     <Button variant='light' className='btn-sm'>\r\n                       <i className='fas fa-edit' />\r\n                     </Button>\r\n                   </LinkContainer>\r\n                   \r\n                   <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                     <i className= 'fas fa-trash' />\r\n                   </Button>\r\n                 </td>\r\n               </tr>\r\n             ))\r\n           }\r\n         </tbody>\r\n       </Table>\r\n     ) } \r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  \r\n  const userId = match.params.id\r\n  \r\n  // these are default values of name, email & isAdmin (for empty form, i.e. when details have not been fetched)\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const userDetails = useSelector(state => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n  \r\n  const userUpdate = useSelector(state => state.userUpdate)\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n  \r\n  useEffect(() => {\r\n    \r\n    if (successUpdate) {                        //reset the state when user gets updated successfully \r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {                    // !user.name -> make sure that user is not already there, only then fetch the user; same for OR condition i.e.  if user id (from state) does not match the user id from url, then fetch the user (from url id); see article 11.6 @ 8:30 for details\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n      \r\n  }, [user, dispatch, userId, successUpdate, history])\r\n  \r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))         // _id: userId is not renaming (like when we destructure), it means set value of _id as userId\r\n    \r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist/' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      \r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader /> }\r\n        { errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }        \r\n        {\r\n          loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n          (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)} />\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId='isadmin'>\r\n                <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)} />\r\n              </Form.Group>\r\n              \r\n              <Button type='submit' variant='primary'>\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          )\r\n        }\r\n        \r\n      </FormContainer>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  \r\n  const pageNumber = match.params.pageNumber || 1\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const productList = useSelector(state => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n  \r\n  const productDelete = useSelector(state => state.productDelete)\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n  \r\n  const productCreate = useSelector(state => state.productCreate)\r\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n  \r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  \r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n    \r\n    // if (userInfo && userInfo.isAdmin) {\r\n    //   dispatch(listProducts())\r\n    // } else {\r\n    //   history.push('/login')\r\n    // }\r\n    \r\n    if (!userInfo.isAdmin) {                //if user is not an Admin\r\n      history.push('/login')\r\n    }\r\n    \r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n    \r\n  }, [dispatch, userInfo, history, createdProduct, successDelete, successCreate, pageNumber])\r\n  \r\n  const deleteHandler = (id) => {\r\n    //console.log('delete')\r\n    if(window.confirm('Are you sure?')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n  \r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'> Create Product</i>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      \r\n      { errorDelete && <Message variant='danger'>{errorDelete}</Message> }\r\n      \r\n      { errorCreate && <Message variant='danger'>{errorCreate}</Message> }\r\n     \r\n      { loading || loadingDelete || loadingCreate ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            \r\n            <tbody>\r\n              {\r\n                products.map(product => (\r\n                  <tr key={product._id}>\r\n                    <td>{product._id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>$ {product.price}</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.brand}</td>\r\n                    <td>\r\n                      <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                        <Button variant='light' className='btn-sm'>\r\n                          <i className='fas fa-edit' />\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      \r\n                      <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                        <i className= 'fas fa-trash' />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              }\r\n            </tbody>\r\n          </Table>\r\n          \r\n          <Paginate pages={pages} page={page} isAdmin={true}/>\r\n        </>\r\n      ) } \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  \r\n  const productId = match.params.id\r\n  \r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n  \r\n  const dispatch = useDispatch()\r\n  \r\n  const productDetails = useSelector(state => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n  \r\n  const productUpdate = useSelector(state => state.productUpdate)\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n  \r\n  useEffect(() => {\r\n    \r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n    \r\n  }, [product, dispatch, productId, history, successUpdate])\r\n  \r\n  \r\n  const uploadFileHandler = async (e) => {          //async because we'll be making an http request; e -> so we can get access to files\r\n    const file = e.target.files[0]                  //from the array/multiple selection of files, select the first one\r\n    const formData = new FormData()                 //initialize formdata object\r\n    formData.append('image', file)                  //append file to the formdata ; 'image' is from backend middleware called upload\r\n    \r\n    setUploading(true)\r\n    \r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }\r\n      \r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n      \r\n      setImage(data)    //pass in the data which will be the path that comes back as response\r\n      \r\n      setUploading(false)     //set setUploading back to false \r\n      \r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }  \r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    dispatch(updateProduct({ \r\n      _id: productId,\r\n      name: name,\r\n      price: price,\r\n      image: image,\r\n      brand: brand,\r\n      category: category,\r\n      description: description,\r\n      countInStock: countInStock\r\n     }))\r\n    \r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist/' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      \r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        { loadingUpdate && <Loader /> }\r\n        { errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\r\n        {\r\n          loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n          (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)} />\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId='price'>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control type='number' placeholder='Enter Price' value={price} onChange={(e) => setPrice(e.target.value)} />\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId='image'>\r\n                <Form.Label>Image</Form.Label>\r\n                <Form.Control type='text' placeholder='Enter Image URL' value={image} onChange={(e) => setImage(e.target.value)} />\r\n                <Form.File id='image-file' label='Choose a File' custom onChange={uploadFileHandler} />\r\n                {uploading && <Loader />}\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId='brand'>\r\n                <Form.Label>Brand</Form.Label>\r\n                <Form.Control type='text' placeholder='Enter Brand' value={brand} onChange={(e) => setBrand(e.target.value)} />\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId='countInStock'>\r\n                <Form.Label>Count In Stock</Form.Label>\r\n                <Form.Control type='number' placeholder='Enter Count In Stock' value={countInStock} onChange={(e) => setCountInStock(e.target.value)} />\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId='category'>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control type='text' placeholder='Enter Category' value={category} onChange={(e) => setCategory(e.target.value)} />\r\n              </Form.Group>\r\n              \r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control type='text' placeholder='Enter Description' value={description} onChange={(e) => setDescription(e.target.value)} />\r\n              </Form.Group>\r\n              \r\n              <Button type='submit' variant='primary'>\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          )\r\n        }\r\n        \r\n      </FormContainer>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\n\r\n\r\n//NOTE: order of routes placed here matters; i.e. if route which has exact keyword is written at the top, the routes below it won't get pinged; for more info, Google\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />           {/* ? in :id makes id optional */}\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\r\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </ Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}